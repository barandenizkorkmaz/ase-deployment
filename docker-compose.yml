version: "3"

services:
  mongo:
    image: mongo:latest
    restart: always
    volumes:
      - ./mongo/scripts/:/docker-entrypoint-initdb.d/:ro
    ports:
      - 27017:27017
    networks:
      - my-network

  registry-service:
    container_name: registry-service
    restart: always
    build:
      context: ./registry-service
      dockerfile: Dockerfile
    image: barandenizkorkmaz/deployment-registry-service:latest
    ports:
      - 8761:8761
    networks:
      - my-network

  gateway:
    container_name: gateway
    restart: always
    build:
      context: ./gateway
      dockerfile: Dockerfile
    image: barandenizkorkmaz/deployment-gateway:latest
    ports:
      - 10789:10789
    depends_on:
      - registry-service
    networks:
      - my-network

  authentication-service:
    container_name: authentication-service
    restart: always
    build:
      context: ./authentication-service
      dockerfile: Dockerfile
    image: barandenizkorkmaz/deployment-authentication-service:latest
    ports:
      - 8081:8081
    depends_on:
      - mongo
      - registry-service
    environment:
      - MONGO_HOST=mongo
    networks:
      - my-network

  delivery-service:
    container_name: delivery-service
    restart: always
    build:
      context: ./delivery-service
      dockerfile: Dockerfile
    image: barandenizkorkmaz/deployment-delivery-service:latest
    ports:
      - 8082:8082
    depends_on:
      - mongo
      - registry-service
    networks:
      - my-network

  frontend:
    container_name: frontend
    restart: always
    build:
      context: ./frontend_v2
      dockerfile: Dockerfile
    image: barandenizkorkmaz/deployment-frontend:latest
    volumes:
      - '.:/app'
      - '/app/node_modules'
    depends_on:
      - gateway
    ports:
      - 3000:3000
    environment:
      - CHOKIDAR_USEPOLLING=true
    networks:
      - my-network

networks:
  my-network:
    driver: bridge